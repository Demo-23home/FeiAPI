Stage1: Auth&Profile
    #file_management:
        !jwt (done)
        !installed-apps 
        !jazzmin (done)
        !jwt-settings (done)
        !cors-headers
        !swagger  (done)
        !code refactoring 
        !static_&_media_settings  (done)
        !admin_site_customization


    #Custome_User_Model(AbstractUser) (done)
        -User
        -Docotr


    #User(custome_User_Model) (done)
        -username (login)
        -email (email)


    #Profile: >> signals  (done)
        -first_name (charfiled)
        -last_name (charfiled)
        -birth_date (datetimefiled) --
        -government [choices]
        -city [choices]
        -phone_number [positive-integer-filed]
        -gender [choices]
        
        !Profile_Data_Function   (done)


    #Authentication: >> jwt (done)
        1-user
            register*
            login*(encode the user data in the token!)
            user_profile* 
            reset_password*

                        2-doctor
                            register
                            login
                            user_profile
                            reset_password


Stage2: Pharmacy(done)
    #Creating Pharmacy Model 
        -attrs
        -fav
    # CRUDS
        -top 3 pharm
        -fliter(type)
    #Creating Cart Model
        -add, remove , out of stock 

Stage3: Labs(done)
    #creating Labs Model
        -attrs
    # CRUDS
        -top 5 objects
        -fliter(type)
    #set appointment

Stage4: HomePage
    -list all docs (done)
    -top 5 docs (done)
    -top 3 pharms
    -labs
    -user_profile

Stage5: Bookings
    Doctor-Booking:
        -book function 
        -date, time
        -duration => message, voice
        -package => message, voice ,inperson
        -order
        -user => doctor relationship
        -state[C, P, F]
        -cancel[reason, reschedual] - confirm
        -comment
        -patients in doctor app(get the number of patients through the number of doctor bookings) 
        -list user bookings
    
    Lab-Booking:
        -book function
        - date, time 
        -user => lab relationship
        -package[]
        -state[C, P, F]
        -cancel[reason, reschedual]
        -patients in labs app(get the number of patients through the number of lab bookings)



Stage6: Plans
    Doctor:
        #CRUDS
        -patient
            -medicines(CRUDS)
        
        #Medcines
            -name
            -dose 
            -bill-dosage
            -program
            -bill taken[view only]

    Patients:
        #Medcines
        -name
        -dose 
        -bill-dosage
        -program
        -bill taken[view only, take]


Stage7: Chats


Stage8: Patients App
    -list doctor-related patients
    -review doctor


Stage10: Payment
    -pharmacy payment(done)
    -labs payment
    -doctor-payment


Stage11: AI integration


Stage12: DB-filling